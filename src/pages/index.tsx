import { GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { Tab } from "@headlessui/react";
import classNames from "classnames";

import background from "../../public/photography-bg.jpeg";

import { createApi } from "unsplash-js";
import nodeFetch from "node-fetch";

import Gallery from "../components/Gallery";
import getImages from "../utils/getImages";
import type { Photo } from "../types";

const tabs = [
  { key: "all", display: "All" },
  { key: "oceans", display: "Oceans" },
  { key: "forests", display: "Forests" },
];

type HomeProps = {
  oceans: Photo[];
  forests: Photo[];
};

export const getStaticProps: GetStaticProps<HomeProps> = async () => {
  const unsplash = createApi({
    accessKey: process.env.UNSPLASH_ACCESS_KEY!,
    fetch: nodeFetch as unknown as typeof fetch,
  });

  const [oceans, forests] = await Promise.all([
    getImages(unsplash, "oceans"),
    getImages(unsplash, "forests"),
  ]);

  return {
    props: {
      oceans,
      forests,
    },
  };
};

const Home = ({ oceans, forests }: HomeProps) => {
  return (
    <div className=" h-full overflow-auto">
      <Head>
        <title>Photography Portfolio</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Image
        src={background}
        alt={"background-image"}
        className="fixed left-0 top-0 z-0"
        placeholder="blur"
      />
      <div className="fixed left-0 top-0 z-10 h-full w-full bg-gradient-to-t from-stone-900"></div>

      <header className="fixed top-0 z-30 flex h-[90px] w-full items-center justify-between px-10">
        <div className="hidden">hm</div>
        <span className="text-lg font-medium uppercase">
          Photography Portfolio
        </span>
        <Link
          href={""}
          className="rounded-3xl bg-white px-3 py-2 text-stone-700 hover:bg-opacity-90"
        >
          Get in touch
        </Link>
      </header>

      <main className="relative z-20 pt-[110px]">
        <div className="flex h-full flex-col items-center">
          <Tab.Group>
            <Tab.List className="flex items-center gap-12">
              {tabs.map((tab) => (
                <Tab key={tab.key} className="p-2 outline-none">
                  {({ selected }) => (
                    <span
                      className={classNames(
                        "text-lg uppercase ",
                        selected ? "text-white" : "text-stone-600"
                      )}
                    >
                      {tab.display}
                    </span>
                  )}
                </Tab>
              ))}
            </Tab.List>
            <Tab.Panels className="my-6 h-full w-full max-w-[900px] p-2 sm:p-4">
              <Tab.Panel className="">
                <Gallery photos={[...oceans, ...forests]} />
              </Tab.Panel>
              <Tab.Panel>
                <Gallery photos={[...oceans]} />
              </Tab.Panel>
              <Tab.Panel>
                <Gallery photos={[...forests]} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
      </main>

      <footer className="relative z-20 flex h-[90px] items-center justify-center text-lg font-medium uppercase">
        <p>Photography portfolio</p>
      </footer>
    </div>
  );
};

export default Home;
